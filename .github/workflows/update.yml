name: Update v1.xml
on:
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch:

jobs:
  update:
    name: Update
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v2
      - name: Download and check the latest v1.xml
        run: |
          curl -H "Cache-Control: no-cache, no-store" -v "https://edge.microsoft.com/neededge/v1?a=$(date '+%s')" > v1.xml
          git diff --exit-code || echo "::set-output name=DIFF_EXISTS::1"
        id: diff
      - if: steps.diff.outputs.DIFF_EXISTS
        name: Download and check the latest v1.xml (2)
        run: |
          sleep 3
          curl -H "Cache-Control: no-cache, no-store" -v "https://edge.microsoft.com/neededge/v1?a=$(date '+%s')" > v1.xml
          git diff --exit-code || echo "::set-output name=DIFF_EXISTS::1"
        id: diff2
      - if: steps.diff2.outputs.DIFF_EXISTS
        name: Download and check the latest v1.xml (3)
        run: |
          sleep 3
          curl -H "Cache-Control: no-cache, no-store" -v "https://edge.microsoft.com/neededge/v1?a=$(date '+%s')" > v1.xml
          git diff --exit-code || echo "::set-output name=DIFF_EXISTS::1"
        id: diff3
      - if: steps.diff3.outputs.DIFF_EXISTS
        name: Push the latest
        run: |
          DATE=$(date '+%Y-%m-%d')
          # BRANCH=update-${DATE}
          BRANCH=master
          VER=$(grep -e '<site-list\s' v1.xml | sed -r 's/.*version="([0-9]+)".*/\1/')
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          # git checkout -b "$BRANCH"
          git add v1.xml
          git commit -m "Update v1.xml to v${VER} on ${DATE}"
          git push -u origin "$BRANCH"
